import{A as r,a as n,b as l,c}from"./Accordion-CE42LYYU.js";import{c as e,m as s,F as i}from"./iframe-BLvaHOrW.js";const{fn:d}=__STORYBOOK_MODULE_TEST__,p={args:{onChange:d()},argTypes:{collapsible:{control:{type:"boolean"},description:"Allows closing content when clicking trigger for an open item when `multiple` is `false`.",table:{defaultValue:{summary:"false"},type:{summary:"bool"}}},defaultValue:{control:{type:"object"},description:`The value of the accordion item(s) to expand when initially rendered.
 Useful when you do not need to control the state.`,table:{type:{summary:"Array of String"}}},multiple:{control:{type:"boolean"},description:"Whether multiple items can be opened at the same time.",table:{defaultValue:{summary:"false"},type:{summary:"bool"}}},onChange:{control:{type:!1},description:"Event handler called when the value changes.",table:{type:{summary:"function"}}},shouldFocusWrap:{control:{type:"boolean"},description:"Whether focus should wrap around when the end/start is reached.",table:{type:{summary:"bool"}}},value:{control:{type:"object"},description:"The controlled value of the accordion item(s) to expand.",table:{type:{summary:"Array of String"}}}},render:a=>e(r,s(a,{"bool:n$":!1,get children(){return e(i,{each:[1,2,3,4,5,6],children:(t,u)=>e(n,{value:`Accordion${t}`,get children(){return[e(l,{children:`Title ${t}`}),e(c,{children:`Content ${t}`})]}})})}})),component:r},o={args:{}};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`{
  args: {}
}`,...o.parameters?.docs?.source}}};const m=["Default"],f=Object.freeze(Object.defineProperty({__proto__:null,Default:o,__namedExportsOrder:m,default:p},Symbol.toStringTag,{value:"Module"}));export{f as A,o as D};
