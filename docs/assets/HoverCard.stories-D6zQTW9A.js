import{H as o,a as n,b as a}from"./HoverCard-DG0Vm_TF.js";import{c as t,m as i}from"./iframe-BHVPMPJn.js";const{fn:l}=__STORYBOOK_MODULE_TEST__,s={args:{onOpenChange:l()},argTypes:{arrowPadding:{control:{type:"number"},description:"The minimum padding between the arrow and the popper corner.",table:{type:{summary:"float64"}}},closeDelay:{control:{type:"number"},description:"The duration from when the mouse leaves the trigger or content until the hovercard closes.",table:{type:{summary:"float64"}}},defaultOpen:{control:{type:"boolean"},description:`The default open state when initially rendered.
 Useful when you do not need to control the open state.`,table:{type:{summary:"bool"}}},detachedPadding:{control:{type:"number"},description:"The minimum padding in order to consider the anchor element occluded.",table:{type:{summary:"float64"}}},fitViewport:{control:{type:"boolean"},description:`Whether the popper should fit the viewport. If this is set to true, the
 popper positioner will have maxWidth and maxHeight set to the viewport size.
 This will be exposed to CSS as --kb-popper-content-available-width and --kb-popper-content-available-height.`,table:{type:{summary:"bool"}}},flip:{control:{type:"object"},description:`Controls the behavior of the popper when it overflows the viewport:
   - If a boolean, specifies whether the popper should flip to the
     opposite side when it overflows.
   - If a string, indicates the preferred fallback placements when it
     overflows. The placements must be spaced-delimited, e.g. "top left".`,table:{type:{summary:"U2",detail:"C:/Users/shaya/RiderProjects/Partas.Solid.UIKit/Partas.Solid.UI/fable_modules/Partas.Solid.2.1.2/AttributesAliasesExtensions.fs"}}},forceMount:{control:{type:"boolean"},description:`Used to force mounting the hovercard (portal and content) when more control is needed.
 Useful when controlling animation with SolidJS animation libraries.`,table:{type:{summary:"bool"}}},getAnchorRect:{control:{type:!1},description:`Function that returns the anchor element's DOMRect. If this is explicitly
 passed, it will override the anchor getBoundingClientRect method.`,table:{type:{summary:"function"}}},gutter:{control:{type:"number"},description:`The distance between the popper and the anchor element.
 By default, it's 0 plus half of the arrow offset, if it exists.`,table:{type:{summary:"float64"}}},hideWhenDetached:{control:{type:"boolean"},description:"Whether to hide the popper when the anchor element becomes occluded.",table:{type:{summary:"bool"}}},id:{control:{type:"text"},description:`A unique identifier for the component.
 The id is used to generate id attributes for nested components.
 If no id prop is provided, a generated id will be used.`,table:{type:{summary:"string"}}},ignoreSafeArea:{control:{type:"boolean"},description:"Whether to close the hovercard even if the user cursor is inside the safe area between the trigger and hovercard.",table:{type:{summary:"bool"}}},onOpenChange:{control:{type:!1},description:"Event handler called when the open state of the hovercard changes.",table:{type:{summary:"function"}}},open:{control:{type:"boolean"},description:"The controlled open state of the hovercard.",table:{type:{summary:"bool"}}},openDelay:{control:{type:"number"},description:"The duration from when the mouse enters the trigger until the hovercard opens.",table:{type:{summary:"float64"}}},overflowPadding:{control:{type:"number"},description:`The minimum padding between the popper and the viewport edge.
 This will be exposed to CSS as --kb-popper-content-overflow-padding.`,table:{type:{summary:"float64"}}},overlap:{control:{type:"boolean"},description:"Whether the popper can overlap the anchor element when it overflows.",table:{type:{summary:"bool"}}},placement:{control:{type:"radio"},description:"The placement of the popper.",options:["top","bottom","left","right"],table:{type:{summary:"[<StringEnum>]"}}},sameWidth:{control:{type:"boolean"},description:`Whether the popper should have the same width as the anchor element.
 This will be exposed to CSS as --kb-popper-anchor-width.`,table:{type:{summary:"bool"}}},shift:{control:{type:"number"},description:"The skidding of the popper along the anchor element.",table:{type:{summary:"float64"}}},slide:{control:{type:"boolean"},description:"Whether the popper should slide when it overflows.",table:{type:{summary:"bool"}}}},render:r=>t(o,i(r,{"bool:n$":!1,get children(){return[t(n,{children:"Hover"}),t(a,{children:"Partas.Solid - DX for Fable front end"})]}})),component:o},e={args:{}};e.parameters={...e.parameters,docs:{...e.parameters?.docs,source:{originalSource:`{
  args: {}
}`,...e.parameters?.docs?.source}}};const p=["Default"],c=Object.freeze(Object.defineProperty({__proto__:null,Default:e,__namedExportsOrder:p,default:s},Symbol.toStringTag,{value:"Module"}));export{e as D,c as H};
